'use client'

import { motion } from 'framer-motion'
import { Users, TrendingUp, AlertTriangle, CheckCircle } from 'lucide-react'
import { SkillGapChart, TalentReadinessChart } from '@/components/charts/SkillGapChart'

export default function HumanCapitalSection() {
  return (
    <section id="human-capital" className="py-20 bg-white">
      <div className="section-container">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ duration: 0.6 }}
          className="text-center mb-16"
        >
          <h2 className="text-4xl md:text-5xl font-bold text-executive-dark mb-6">
            M·ªánh l·ªánh v·ªÅ{' '}
            <span className="text-gradient">V·ªën con ng∆∞·ªùi</span>
          </h2>
          <p className="text-xl text-executive-medium max-w-4xl mx-auto leading-relaxed">
            ƒêi·ªÅu h∆∞·ªõng Ngh·ªãch l√Ω Nh√¢n t√†i Vi·ªát Nam trong k·ª∑ nguy√™n AI
          </p>
        </motion.div>

        {/* Talent Paradox */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ duration: 0.6 }}
          className="mb-16"
        >
          <div className="card-executive">
            <div className="flex items-center mb-6">
              <AlertTriangle className="w-8 h-8 text-amber-500 mr-3" />
              <h3 className="text-2xl font-bold text-executive-dark">
                Ngh·ªãch l√Ω Nh√¢n t√†i Vi·ªát Nam
              </h3>
            </div>
            
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-6">
              <div className="space-y-4">
                <div className="flex items-center text-green-600">
                  <TrendingUp className="w-6 h-6 mr-2" />
                  <span className="font-semibold">Nhu c·∫ßu tuy·ªÉn d·ª•ng AI</span>
                </div>
                <div className="text-4xl font-bold text-green-600">91%</div>
                <p className="text-executive-medium">
                  l√£nh ƒë·∫°o doanh nghi·ªáp Vi·ªát Nam ƒëang c√¢n nh·∫Øc tuy·ªÉn d·ª•ng cho c√°c vai tr√≤ chuy√™n v·ªÅ AI
                  (v∆∞·ª£t m·ª©c trung b√¨nh to√†n c·∫ßu)
                </p>
              </div>
              
              <div className="space-y-4">
                <div className="flex items-center text-red-600">
                  <Users className="w-6 h-6 mr-2" />
                  <span className="font-semibold">Th·ª±c t·∫ø nh√¢n vi√™n</span>
                </div>
                <div className="text-4xl font-bold text-red-600">84%</div>
                <p className="text-executive-medium">
                  nh√¢n vi√™n c·∫£m th·∫•y h·ªç kh√¥ng c√≥ ƒë·ªß th·ªùi gian v√† nƒÉng l∆∞·ª£ng ƒë·ªÉ ho√†n th√†nh c√¥ng vi·ªác hi·ªán t·∫°i
                </p>
              </div>
            </div>

            <div className="bg-amber-50 border-l-4 border-amber-400 p-4 rounded-lg">
              <p className="text-amber-800">
                <strong>Th√°ch th·ª©c:</strong> Vi·ªát Nam c·∫ßn kho·∫£ng 50.000 k·ªπ s∆∞ AI v√†o nƒÉm 2025 
                nh∆∞ng m·ªói nƒÉm ch·ªâ ƒë√†o t·∫°o ƒë∆∞·ª£c 5.000‚Äì7.000 ng∆∞·ªùi, v√† 60% sinh vi√™n t·ªët nghi·ªáp thi·∫øu k·ªπ nƒÉng th·ª±c t·∫ø.
              </p>
            </div>
          </div>
        </motion.div>

        {/* Data Visualizations */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-16">
          <motion.div
            initial={{ opacity: 0, x: -20 }}
            whileInView={{ opacity: 1, x: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.6 }}
          >
            <SkillGapChart />
          </motion.div>
          
          <motion.div
            initial={{ opacity: 0, x: 20 }}
            whileInView={{ opacity: 1, x: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.6 }}
          >
            <TalentReadinessChart />
          </motion.div>
        </div>

        {/* New Talent Architecture */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ duration: 0.6 }}
          className="mb-16"
        >
          <h3 className="text-3xl font-bold text-executive-dark mb-8 text-center">
            Ki·∫øn tr√∫c Nh√¢n t√†i M·ªõi: Tinh g·ªçn, Tinh nhu·ªá v√† ƒë∆∞·ª£c AI h·ªó tr·ª£
          </h3>
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            {[
              {
                title: 'C·∫•u tr√∫c ph·∫≥ng h∆°n',
                description: 'AI t·ª± ƒë·ªông h√≥a b√°o c√°o v√† ph√¢n t√≠ch, gi·∫£m nhu c·∫ßu qu·∫£n l√Ω trung gian',
                icon: 'üèóÔ∏è'
              },
              {
                title: 'M·ªü r·ªông b·∫±ng nƒÉng l·ª±c',
                description: 'TƒÉng tr∆∞·ªüng kh√¥ng c√≤n ph·ª• thu·ªôc v√†o s·ªë l∆∞·ª£ng nh√¢n vi√™n m√† v√†o AI agents',
                icon: 'üöÄ'
              },
              {
                title: 'Khu·∫øch ƒë·∫°i gi√° tr·ªã con ng∆∞·ªùi',
                description: 'T·∫≠p trung v√†o t∆∞ duy chi·∫øn l∆∞·ª£c, c√¢n nh·∫Øc ƒë·∫°o ƒë·ª©c v√† s√°ng t·∫°o',
                icon: 'üí°'
              }
            ].map((item, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ duration: 0.4, delay: index * 0.1 }}
                className="card-executive text-center"
              >
                <div className="text-4xl mb-4">{item.icon}</div>
                <h4 className="text-xl font-semibold text-executive-dark mb-3">
                  {item.title}
                </h4>
                <p className="text-executive-medium">
                  {item.description}
                </p>
              </motion.div>
            ))}
          </div>
        </motion.div>

        {/* Solutions */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ duration: 0.6 }}
        >
          <h3 className="text-3xl font-bold text-executive-dark mb-8 text-center">
            Ba Nguy√™n t·∫Øc C·ªët l√µi ƒë·ªÉ Gi·∫£i quy·∫øt Kho·∫£ng tr·ªëng Nh√¢n t√†i
          </h3>
          
          <div className="space-y-6">
            {[
              {
                number: 1,
                title: 'ƒê·∫ßu t∆∞ m·∫°nh m·∫Ω v√†o ƒë√†o t·∫°o th·ª±c t·∫ø t·∫°i ch·ªó',
                description: 'V∆∞·ª£t ra ngo√†i l√Ω thuy·∫øt, t·∫°o ch∆∞∆°ng tr√¨nh th·ª±c h√†nh "human-in-the-loop" nh∆∞ Samsung ƒë√£ l√†m v·ªõi 100 chuy√™n gia ƒë·ªãa ph∆∞∆°ng.',
                action: 'ƒê√†o t·∫°o th·ª±c h√†nh 12 tu·∫ßn'
              },
              {
                number: 2,
                title: 'X√¢y d·ª±ng vƒÉn h√≥a h·ªó tr·ª£, kh√¥ng ph·∫£i thay th·∫ø',
                description: 'Truy·ªÅn ƒë·∫°t nh·∫•t qu√°n r·∫±ng AI h·ªó tr·ª£ ti·ªÅm nƒÉng con ng∆∞·ªùi, gi·∫£i ph√≥ng nh√¢n vi√™n cho c√¥ng vi·ªác chi·∫øn l∆∞·ª£c v√† s√°ng t·∫°o.',
                action: 'Giao ti·∫øp t·ª´ c·∫•p cao nh·∫•t'
              },
              {
                number: 3,
                title: 'Thi·∫øt l·∫≠p quan h·ªá ƒë·ªëi t√°c chi·∫øn l∆∞·ª£c',
                description: 'H·ª£p t√°c v·ªõi nh√† cung c·∫•p c√¥ng ngh·ªá, tr∆∞·ªùng ƒë·∫°i h·ªçc v√† t·ªï ch·ª©c qu·ªëc t·∫ø ƒë·ªÉ nh·∫≠p kh·∫©u ki·∫øn th·ª©c chuy√™n m√¥n.',
                action: 'ƒê·ªëi t√°c c√¥ng-t∆∞ nh∆∞ HCMC-Google'
              }
            ].map((solution, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, x: -20 }}
                whileInView={{ opacity: 1, x: 0 }}
                viewport={{ once: true }}
                transition={{ duration: 0.5, delay: index * 0.1 }}
                className="card-executive"
              >
                <div className="flex items-start space-x-6">
                  <div className="w-12 h-12 bg-vietnam-red text-white rounded-full flex items-center justify-center font-bold text-lg flex-shrink-0">
                    {solution.number}
                  </div>
                  <div className="flex-1">
                    <h4 className="text-xl font-semibold text-executive-dark mb-3">
                      {solution.title}
                    </h4>
                    <p className="text-executive-medium mb-4 leading-relaxed">
                      {solution.description}
                    </p>
                    <div className="flex items-center text-vietnam-red">
                      <CheckCircle className="w-5 h-5 mr-2" />
                      <span className="font-medium">{solution.action}</span>
                    </div>
                  </div>
                </div>
              </motion.div>
            ))}
          </div>
        </motion.div>
      </div>
    </section>
  )
}